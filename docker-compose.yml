version: '3.8'

services:
  db_media:
    image: postgres:15
    container_name: db_media
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "0.0.0.0:${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./scriptsqls/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - media_net
    restart: unless-stopped

  app_media:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_media
    depends_on:
      - db_media
    environment:
      POSTGRES_HOST: db_media
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_LOGS: ${BACKEND_PORT}
      BACKEND_HOST: ${BACKEND_HOST}
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "0.0.0.0:${BACKEND_PORT:-3000}:3000"
    networks:
      - media_net
    command: npm run start:dev

  tdd_jest_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tdd_jest_api
    depends_on:
      - db_media
    environment:
      POSTGRES_HOST: db_media
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - media_net
    command: npm run test -- --runInBand --forceExit

volumes:
  postgres_data:

networks:
  media_net:
    driver: bridge
